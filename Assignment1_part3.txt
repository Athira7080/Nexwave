
.exe:


'''
Using functional programming
by passing the id and list as arguments

#executing in python console:
>>> l=[10,20,30]
>>> dev_id_search(50,l)
'DevID found, Dev Id=20Index=1'
>>> dev_id_search(20)
Traceback (most recent call last):
  File "<input>", line 1, in <module>
TypeError: dev_id_search() missing 1 required positional argument: 'dev_list'
'''
def dev_id_search(dev_id,dev_list):
    if dev_id in dev_list:
        return 'DevID found, Dev Id='+str(dev_id)+'Index='+str(dev_list.index(dev_id))
    elif dev_id>max(dev_list):
        return 'Not Found'
    else:
        for i in dev_list:
            if i>dev_id:
                return 'Val='+str(i)+' index='+str(dev_list.index(i))

def main():
    list1 = [1, 3, 5, 16, 8]
    list2 = [6, 5, 9, 4, 13, 12]
    list3 = list1 + list2
    s=set(list3)
    list4=list(s)
    list4.sort()
    while True:
        i=input('Enter the id: ')
        i=eval(i)
        r=dev_id_search(i,list4)
        print('search result=',r)
        ch=input('Do you want to continue(y/n)')
        if ch=='n':
            break


if __name__=='__main__':
    main()
    import doctest
    doctest.testmod()



#create a new folder under releases in python programming folder and copy paste asst_1_function into it and rename it with some name like search_program.py
#pyinstaller-3rd party library,using this we can create  executables (.exe) of any python file
''' in the terminal ->
>pip install pyinstaller
>cd releases
>cd release1
>pyinstaller -F search_program.py

#then go to python programming folder ->releases ->release1 ->serach_program.py
#a console cmd prmt appears where u can execute ur program
'''

#release2

google-> packaging python -> packaging.python.org ->tutorials(left side) ->packaging python projects -> copy creating setup.py code into a new folder in release2 named setup.py
#create a New file folder named as README.md in release2 and insert some text in it.

setup.py:

import setuptools

with open("README.md", "r") as fh:
    long_description = fh.read()

setuptools.setup(
    name="example-pkg-YOUR-USERNAME-HERE", # Replace with your own username
    version="0.0.1",
    author="Example Author",
    author_email="author@example.com",
    description="A small example package",
    long_description=long_description,
    long_description_content_type="text/markdown",
    url="https://github.com/Athira7080/Nexwave",
    packages=setuptools.find_packages(),
    scripts=['serach_program.py'],
    classifiers=[
        "Programming Language :: Python :: 3",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
    ],
    python_requires='>=3.6',
)


README.md:

kashjdkadsadhjksdhkjda


In terminal:

>>(myvenv1) C:\Python Training\releases\release1>cd..

>>(myvenv1) C:\Python Training\releases>cd release2

>>myvenv1) C:\Python Training\releases\release2>python setup.py sdist
running sdist
running egg_info
creating example_pkg_YOUR_USERNAME_HERE.egg-info
writing example_pkg_YOUR_USERNAME_HERE.egg-info\PKG-INFO
writing dependency_links to example_pkg_YOUR_USERNAME_HERE.egg-info\dependency_links.txt
writing top-level names to example_pkg_YOUR_USERNAME_HERE.egg-info\top_level.txt
writing manifest file 'example_pkg_YOUR_USERNAME_HERE.egg-info\SOURCES.txt'
reading manifest file 'example_pkg_YOUR_USERNAME_HERE.egg-info\SOURCES.txt'
writing manifest file 'example_pkg_YOUR_USERNAME_HERE.egg-info\SOURCES.txt'
running check
creating example-pkg-YOUR-USERNAME-HERE-0.0.1
creating example-pkg-YOUR-USERNAME-HERE-0.0.1\example_pkg_YOUR_USERNAME_HERE.egg-info
copying files to example-pkg-YOUR-USERNAME-HERE-0.0.1...
copying README.md -> example-pkg-YOUR-USERNAME-HERE-0.0.1
copying serach_program.py -> example-pkg-YOUR-USERNAME-HERE-0.0.1
copying setup.py -> example-pkg-YOUR-USERNAME-HERE-0.0.1
copying example_pkg_YOUR_USERNAME_HERE.egg-info\PKG-INFO -> example-pkg-YOUR-USERNAME-HERE-0.0.1\example_pkg_YOUR_USERNAME_HERE.egg-info
copying example_pkg_YOUR_USERNAME_HERE.egg-info\SOURCES.txt -> example-pkg-YOUR-USERNAME-HERE-0.0.1\example_pkg_YOUR_USERNAME_HERE.egg-info
copying example_pkg_YOUR_USERNAME_HERE.egg-info\dependency_links.txt -> example-pkg-YOUR-USERNAME-HERE-0.0.1\example_pkg_YOUR_USERNAME_HERE.egg-info
copying example_pkg_YOUR_USERNAME_HERE.egg-info\top_level.txt -> example-pkg-YOUR-USERNAME-HERE-0.0.1\example_pkg_YOUR_USERNAME_HERE.egg-info
Writing example-pkg-YOUR-USERNAME-HERE-0.0.1\setup.cfg
creating dist
Creating tar archive
removing 'example-pkg-YOUR-USERNAME-HERE-0.0.1' (and everything under it)

>>(myvenv1) C:\Python Training\releases\release2>cd dist

>>(myvenv1) C:\Python Training\releases\release2\dist>pip install example-pkg-YOUR-USERNAME-HERE-0.0.1.tar.gz
Processing c:\python training\releases\release2\dist\example-pkg-your-username-here-0.0.1.tar.gz
Installing collected packages: example-pkg-YOUR-USERNAME-HERE
  Found existing installation: example-pkg-YOUR-USERNAME-HERE 0.0.1
    Uninstalling example-pkg-YOUR-USERNAME-HERE-0.0.1:
      Successfully uninstalled example-pkg-YOUR-USERNAME-HERE-0.0.1
    Running setup.py install for example-pkg-YOUR-USERNAME-HERE ... done
Successfully installed example-pkg-YOUR-USERNAME-HERE-0.0.1



Then create  release3 similarly and copy paste setup.py,serach_program.py and README.md from previous files

In terminal:


>>(myvenv1) C:\Python Training\releases>cd release3

>>(myvenv1) C:\Python Training\releases\release3>pip install wheel
Collecting wheel
  Using cached https://files.pythonhosted.org/packages/00/83/b4a77d044e78ad1a45610eb88f745be2fd2c6d658f9798a15e384b7d57c9/wheel-0.33.6-py2.py3-none-any.whl
Installing collected packages: wheel
Successfully installed wheel-0.33.6

>>(myvenv1) C:\Python Training\releases\release3>python setup.py bdist_wheel
running bdist_wheel
running build
running build_scripts
creating build
creating build\scripts-3.8
copying serach_program.py -> build\scripts-3.8
installing to build\bdist.win-amd64\wheel
running install
running install_egg_info
running egg_info
creating example_pkg_YOUR_USERNAME_HERE.egg-info
writing example_pkg_YOUR_USERNAME_HERE.egg-info\PKG-INFO
writing dependency_links to example_pkg_YOUR_USERNAME_HERE.egg-info\dependency_links.txt
writing top-level names to example_pkg_YOUR_USERNAME_HERE.egg-info\top_level.txt
writing manifest file 'example_pkg_YOUR_USERNAME_HERE.egg-info\SOURCES.txt'
reading manifest file 'example_pkg_YOUR_USERNAME_HERE.egg-info\SOURCES.txt'
writing manifest file 'example_pkg_YOUR_USERNAME_HERE.egg-info\SOURCES.txt'
Copying example_pkg_YOUR_USERNAME_HERE.egg-info to build\bdist.win-amd64\wheel\.\example_pkg_YOUR_USERNAME_HERE-0.0.1-py3.8.egg-info
running install_scripts
creating build\bdist.win-amd64\wheel\example_pkg_YOUR_USERNAME_HERE-0.0.1.data
creating build\bdist.win-amd64\wheel\example_pkg_YOUR_USERNAME_HERE-0.0.1.data\scripts
copying build\scripts-3.8\serach_program.py -> build\bdist.win-amd64\wheel\example_pkg_YOUR_USERNAME_HERE-0.0.1.data\scripts
creating build\bdist.win-amd64\wheel\example_pkg_YOUR_USERNAME_HERE-0.0.1.dist-info\WHEEL
creating 'dist\example_pkg_YOUR_USERNAME_HERE-0.0.1-py3-none-any.whl' and adding 'build\bdist.win-amd64\wheel' to it
adding 'example_pkg_YOUR_USERNAME_HERE-0.0.1.data/scripts/serach_program.py'
adding 'example_pkg_YOUR_USERNAME_HERE-0.0.1.dist-info/METADATA'
adding 'example_pkg_YOUR_USERNAME_HERE-0.0.1.dist-info/WHEEL'
adding 'example_pkg_YOUR_USERNAME_HERE-0.0.1.dist-info/top_level.txt'
adding 'example_pkg_YOUR_USERNAME_HERE-0.0.1.dist-info/RECORD'
removing build\bdist.win-amd64\wheel

>>(myvenv1) C:\Python Training\releases\release3>python setup.py bdist_msi
running bdist_msi
running build
running build_scripts
installing to build\bdist.win-amd64\msi
running install_egg_info
running egg_info
writing example_pkg_YOUR_USERNAME_HERE.egg-info\PKG-INFO
writing dependency_links to example_pkg_YOUR_USERNAME_HERE.egg-info\dependency_links.txt
writing top-level names to example_pkg_YOUR_USERNAME_HERE.egg-info\top_level.txt
reading manifest file 'example_pkg_YOUR_USERNAME_HERE.egg-info\SOURCES.txt'
writing manifest file 'example_pkg_YOUR_USERNAME_HERE.egg-info\SOURCES.txt'
Copying example_pkg_YOUR_USERNAME_HERE.egg-info to build\bdist.win-amd64\msi\Lib\site-packages\example_pkg_YOUR_USERNAME_HERE-0.0.1-py3.8.egg-info
running install_scripts
creating build\bdist.win-amd64\msi\Scripts
copying build\scripts-3.8\serach_program.py -> build\bdist.win-amd64\msi\Scripts
removing 'build\bdist.win-amd64\msi' (and everything under it)

